{"version":3,"file":"static/js/338.12202c27.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n    getContacts,\n    getFilter,\n    (contacts, filter) => {\n        return contacts.filter(contact => {\n            return contact.name.toLowerCase().includes(filter.toLowerCase());\n        });\n    }\n);\n\nexport const selectLoading = state => state.contacts.loading;\n","import React, {useState} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { nanoid } from \"nanoid\";\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n \n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const formSubmit  = ({name, number}) => {\n        const findName = contacts.find(contact => \n          contact.name.toLowerCase() === name.toLowerCase()\n        );\n        if (findName) {\n          console.log(findName);\n          return alert(`${name} is already in contacts.`);\n        };\n    \n        const findNumber = contacts.find(contact => \n          contact.number === number\n        );\n        if (findNumber) {\n          return alert(`This phone number is already in use.`);\n        };\n    \n        dispatch(addContacts({name, number})); \n      }\n\n  const handleChange = e => {\n      const { name, value } = e.currentTarget;\n\n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n  \n        case 'number':\n          setNumber(value);\n          break;\n  \n        default:\n          break;\n      }\n  };\n\n  const handleSubmit = e => {\n      e.preventDefault();\n      formSubmit({ name: name, number: number });\n      reset();\n  };\n\n  const reset = () => {\n      setName('');\n      setNumber('');\n  };\n\n    return (\n      <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { my: 3, mr: '20px', width: '240px'  },\n      }}\n      noValidate\n      onSubmit={handleSubmit} \n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          id = {nameInputId}\n          onChange={handleChange}\n          required\n          label=\"Name\"\n          variant=\"filled\"\n          type=\"text\" \n          name=\"name\"\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          id = {numberInputId}\n          onChange={handleChange}\n          label=\"Number\"\n          variant=\"filled\"\n        />\n\n        <Stack spacing={2} direction=\"row\">\n        <Button type=\"submit\" >Add contact</Button>\n        </Stack>\n      </div>\n    </Box>\n    );\n}\n\n\n// {/* <form onSubmit={handleSubmit} className={s.form}>\n//           <label htmlFor={nameInputId} className={s.label}>Name</label>\n//           <input\n//               type=\"text\"\n//               name=\"name\"\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//               title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//               required\n//               value={name}\n//               id = {nameInputId}\n//               onChange={handleChange}\n//               className={s.input}\n//           />\n\n//           <label htmlFor={numberInputId} className={s.label}>Number</label>\n//           <input\n//               type=\"tel\"\n//               name=\"number\"\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//               required\n//               value={number}\n//               id = {numberInputId}\n//               onChange={handleChange}\n//               className={s.input}\n//           />\n//           <button type=\"submit\" className={s.button}>Add contact</button>\n//      </form> */}","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/slice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const onChangeFilter = e => {\n        dispatch(filterContact(e.target.value));\n    }\n\n    return (\n        <Box\n        sx={{\n            '& .MuiTextField-root': { my: 3, width: '500px'  },\n          }}\n        >\n         <TextField\n          label=\"Search field\"\n          type=\"text\"\n          variant=\"filled\"\n          name=\"filter\"\n          onChange={onChangeFilter}\n        />\n        </Box>\n        \n    )\n} \n\n\n\n// {/* <div className={s.filter}>\n// <label className={s.label}>Find contacts by name\n// <input\n//         type=\"text\"\n//         name=\"filter\"\n//         onChange={onChangeFilter}\n//         className={s.input}\n// />\n// </label>\n// </div> */}","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper'\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport IconButton from '@mui/material/IconButton';\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n      <Paper elevation={3} >\n             <ListItem\n                secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\" type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                <BackspaceIcon />\n                </IconButton>\n               }\n            >\n            <ListItemAvatar>\n               <AccessibilityNewIcon /> \n           </ListItemAvatar>\n           {name}: {number}\n           </ListItem> \n      </Paper>\n      \n        )\n} \n\n\n\n\n// {/* <li className={s.contactItem}>\n//                 {name}: {number}\n//                 <button type='button' className={s.button} onClick={() => dispatch(deleteContact(id))}>Delete</button>\n//            </li> */}\n\n\n\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\n\nexport const ContactList = () => {\n    const contacts = useSelector(getFilteredContacts);\n\n    return (\n        <Box\n        sx={{\n          width: 500,\n          maxWidth: '100%',\n        }}\n      >\n            <List>\n            {contacts.map(({id, name, number}) => (\n                <ContactItem \n                    key={id} \n                    id={id}\n                    name={name}\n                    number={number}\n                />\n                ))}\n            </List> \n            </Box>\n    )\n} \n\n\n\n// {/* <ul className={s.contactList}>\n//            {contacts.map(({id, name, number}) => (\n//                 <ContactItem \n//                     key={id} \n//                     id={id}\n//                     name={name}\n//                     number={number}\n//                 />\n//         ))}\n//       </ul>  */}\n\n\n\n// {/* <List>\n//             {contacts.map(({id, name, number}) => (\n//                 <ContactItem \n//                     key={id} \n//                     id={id}\n//                     name={name}\n//                     number={number}\n//                 />\n//                 ))}\n//             </List> */}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Container from '@mui/material/Container';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return (\n      <Container maxWidth=\"sm\">\n      <ContactForm />\n      <Filter />\n       <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n      </Container>\n    );\n  };\n"],"names":["getContacts","state","contacts","getFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","selectLoading","loading","ContactForm","useState","setName","number","setNumber","nameInputId","nanoid","numberInputId","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","Box","component","sx","my","mr","width","noValidate","onSubmit","preventDefault","findName","find","console","log","alert","addContacts","formSubmit","autoComplete","TextField","pattern","title","id","onChange","required","label","variant","type","Stack","spacing","direction","Button","Filter","filterContact","target","ContactItem","Paper","elevation","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","Backspace","ListItemAvatar","AccessibilityNew","ContactList","maxWidth","List","map","Contacts","isLoading","useEffect","fetchContacts","Container"],"sourceRoot":""}